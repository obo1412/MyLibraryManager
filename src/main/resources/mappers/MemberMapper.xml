<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="MemberMapper">
	<resultMap id="member" type="com.gaimit.mlm.model.Member">
		<result property="id" column="id"/>
		<result property="idLib" column="id_lib"/>
		<result property="idCode" column="id_code"/>
		<result property="name" column="name"/>
		<result property="phone" column="phone"/>
		<result property="level" column="level"/>

	</resultMap>
	
	<!-- 아이디 중복검사를 수행한다 -->
	<!-- <select id="selectUserIdCount" parameterType="com.gaimit.mlm.model.Member" resultType="int">
		SELECT count(id) FROM member WHERE user_id=#{userId}
	</select> -->
	
	<!-- 이메일 중복 검사를 수행한다 -->
	<!-- <select id="selectEmailCount" parameterType="com.gaimit.mlm.model.Member" resultType="int">
		SELECT count(id) FROM member WHERE email=#{email}
	</select> -->
	
	<!-- 마지막 회원아이디(숫자)를 확인한다. -->
	<select id="selectLastJoinedId" parameterType="com.gaimit.mlm.model.Member" resultType="int">
		SELECT MAX(id) FROM member
	</select>
	
	<!-- 회원정보 목록 조회 -->
	<select id="selectMemberList" parameterType="com.gaimit.mlm.model.Member" resultMap="member">
		SELECT
			id, id_lib, id_code, name, phone, level
		FROM member
		ORDER BY id ASC
	</select>
	
	<!-- 회원정보 목록 조회 -->
	<select id="selectMemberListByLib" parameterType="com.gaimit.mlm.model.Member" resultMap="member">
		SELECT
			id, id_lib, id_code, name, phone, level
		FROM member
		WHERE id_lib=#{idLib}
		ORDER BY id ASC
	</select>
	
	<!-- 회원 이름과 도서관 번호로 목록 조회 -->
	<select id="selectMemberListByLibAndName" parameterType="com.gaimit.mlm.model.Member" resultMap="member">
		SELECT
			id, id_lib, id_code, name, phone, level
		FROM member
		WHERE id_lib=#{idLib} AND name=#{name}
		ORDER BY id ASC
	</select>
	
	<!-- 선수목록 전체 데이터 수 얻기 -->
	<select id="selectMemberCount" parameterType="com.gaimit.mlm.model.Member"
		resultType="int">
		SElECT count(id)
		FROM member
		<if test="id != null and id != ''">
			WHERE id = #{id}
		</if>
	</select>
	
	<!-- 이름과 도서관번호로 선수 데이터 수 얻기 -->
	<select id="selectMemberCountByNameAndIdLib" parameterType="com.gaimit.mlm.model.Member"
		resultType="int">
		SElECT count(id)
		FROM member
		WHERE id_lib=#{idLib} AND name=#{name}
	</select>
	
	<!-- 회원정보를 저장한다 : 가입 -->
	<insert id="insertMember" parameterType="com.gaimit.mlm.model.Member" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO member (
			id_lib, id_code, name, phone, level
		) VALUES (
			#{idLib}, #{idCode}, #{name}, #{phone}, #{level}
		)
	</insert>
	
	<!-- 아이디와 비밀번호가 일치하는 회원정보를 조회한다. -->
	<!-- <select id="selectLoginInfo" parameterType="com.gaimit.mlm.model.Member" resultMap="member">
		SELECT
			id, name, user_id, user_pw, email, gender,
			DATE_FORMAT(birthdate, '%Y-%m-%d') AS birthdate,
			tel, postcode, addr1, addr2, profile_img, reg_date, edit_date
		FROM member
		WHERE user_id=#{userId} AND user_pw=password(#{userPw})
		ORDER BY id DESC
		LIMIT 0, 1
	</select> -->
	
	<!-- 비밀번호 재발급 : 이메일주소가 일치하는 비밀번호를 변경한다. -->
	<update id="updateMemberPasswordByEmail" parameterType="com.gaimit.mlm.model.Member">
		UPDATE member SET user_pw=password(#{userPw}), edit_date=now()
		WHERE email=#{email};
	</update>
	
	<!-- 현재 로그인 중인 회원의 비밀번호를 검사한다. -->
	<select id="selectMemberPasswordCount" >
		SELECT count(id) FROM member
		WHERE id=#{id} AND user_pw=password(#{userPw})
	</select>
	
	<!-- 회원정보를 삭제한다 : 탈퇴 -->
	<delete id="deleteMember" parameterType="com.gaimit.mlm.model.Member">
		DELETE FROM member WHERE id=#{id};
	</delete>
	
	<!-- 회원정보를 변경한다 -->
	<update id="updateMember" parameterType="com.gaimit.mlm.model.Member">
		UPDATE member SET
			name=#{name}, email=#{email}, gender=#{gender}, birthdate=#{birthdate},
			tel=#{tel}, postcode=#{postcode}, addr1=#{addr1}, addr2=#{addr2},
			edit_date=now()
			
			<if test="newUserPw != null and newUserPw != ''">
				user_pw=password(#{newUserPw})
			</if>
			
			<choose>
				<when test="profileImg == ''">
					,profile_img=null
				</when>
				<when test="profileImg != null">
					,profile_img=#{profileImg}
				</when>
			</choose>
		WHERE id=#{id}
	</update>
	
	<!-- 일련번호에 의한 회원정보 조회 -->
	<select id="selectMember" parameterType="com.gaimit.mlm.model.Member" resultMap="member">
		SELECT
			id, id_lib, id_code, name, phone, level
		FROM member
		WHERE name=#{name} AND id_lib=#{idLib}
	</select>
</mapper>