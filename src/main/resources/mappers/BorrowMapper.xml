<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BorrowMapper">
	<resultMap id="borrow" type="com.gaimit.mlm.model.Borrow">
		<result property="idBrw" column="id_brw"/>
		<result property="idLibBrw" column="id_lib_brw"/>
		<result property= "bookHeldId" column="book_held_id"/>
		<result property="idMemberBrw" column="id_member_brw"/>
		<result property="startDateBrw" column="start_date_brw"/>
		<result property="endDateBrw" column="end_date_brw"/>
		<result property="dueDateBrw" column="due_date_brw"/>
		
		<!-- member beans -->
		<result property="name" column="name"/>
		<result property="phone" column="phone"/>
		<result property="gradeId" column="grade_id"/>
		<result property="gradeName" column="grade_name"/>
		<result property="brwLimit" column="brw_limit"/>
		<result property="dateLimit" column="date_limit"/>
		
		<!-- book beans -->
		<result property="titleBook" column="title_book"/>
		<result property="writerBook" column="writer_book"/>
		<result property="publisherBook" column="publisher_book"/>
		
		<!-- book_held beans -->
		<result property="localIdBarcode" column="local_id_barcode"/>
		<result property="copyCode" column="copy_code"/>
	</resultMap>
	
	<!-- 도서 대출 정보를 저장한다
		BrwBookOk.java - brwList 사용 -->
	<insert id="insertBrw" parameterType="com.gaimit.mlm.model.Borrow" useGeneratedKeys="true" keyProperty="id_brw">
		INSERT INTO borrow (
			id_lib_brw, book_held_id, id_member_brw, start_date_brw, due_date_brw
		) VALUES (
			#{idLibBrw}, #{bookHeldId}, #{idMemberBrw}, now(),
			DATE_FORMAT(DATE_ADD(now(), INTERVAL (
				SELECT date_limit
				FROM member_grade g
				INNER JOIN member m ON m.grade_id = g.grade_id
				WHERE m.id=#{idMemberBrw}) DAY), '%Y-%m-%d 23:59:59')
		)
	</insert>
	
	<!-- getBorrowList -->
	<select id="selectBorrowList" parameterType="com.gaimit.mlm.model.Borrow" resultMap="borrow">
		SELECT
			id_brw, id_lib_brw, book_held_id, b.title_book,
			id_member_brw, m.name, m.phone, start_date_brw, end_date_brw
		FROM borrow r
		INNER JOIN book_held h ON r.book_held_id = h.id
		INNER JOIN book b ON b.id_book = h.book_id_book
		INNER JOIN member m ON r.id_member_brw = m.id
		WHERE id_lib_brw = #{idLibBrw} AND (end_date_brw is NULL OR end_date_brw = '')
		ORDER BY start_date_brw ASC
	</select>
	
	<!-- brwBook.java - 오늘의 대출/반납 표시 -->
	<select id="selectBorrowListToday" parameterType="com.gaimit.mlm.model.Borrow" resultMap="borrow">
		SELECT
			id_brw, id_lib_brw, book_held_id, b.title_book, local_id_barcode,
			id_member_brw, m.name, m.phone, start_date_brw, end_date_brw,
			due_date_brw, grade_name
		FROM borrow r
		INNER JOIN book_held h ON r.book_held_id = h.id
		INNER JOIN book b ON b.id_book = h.book_id_book
		INNER JOIN member m ON r.id_member_brw = m.id
		INNER JOIN member_grade g ON m.grade_id = g.grade_id
		WHERE id_lib_brw = #{idLibBrw} AND (start_date_brw > curdate() OR end_date_brw > curdate())
		ORDER BY id_brw ASC
	</select>
	
	<!-- getBorrowItemByBarcodeBook
		ReturnBookOk - idBrw 호출을 위해 사용 -->
	<select id="selectBorrowItemByBarcodeBook" parameterType="com.gaimit.mlm.model.Borrow" resultMap="borrow">
		SELECT
			id_brw, id_lib_brw, book_held_id, local_id_barcode,
			id_member_brw, m.name as name, m.phone, start_date_brw, end_date_brw
		FROM borrow r
		INNER JOIN book_held h on r.book_held_id = h.id
		INNER JOIN member m on r.id_member_brw = m.id
		WHERE id_lib_brw=#{idLibBrw} AND (end_date_brw is NULL OR end_date_brw = '')
		AND local_id_barcode=#{localIdBarcode}
		ORDER BY start_date_brw ASC
	</select>
	
	<!-- ReturnBookOk.java - 도서반납 후 해당 멤버의 나머지 대출중인 도서 조회
		getBorrowListByMbrId -->
	<select id="selectBorrowListByMbrId" parameterType="com.gaimit.mlm.model.Borrow" resultMap="borrow">
		SELECT
			id_brw, id_lib_brw, b.title_book, h.local_id_barcode,
			id_member_brw, m.name as name, m.phone, start_date_brw, end_date_brw,
			due_date_brw ,brw_limit, date_limit
		FROM borrow r
		INNER JOIN book_held h ON r.book_held_id = h.id
		INNER JOIN book b ON h.book_id_book = b.id_book
		INNER JOIN member m ON r.id_member_brw = m.id
		INNER JOIN member_grade g ON m.grade_id = g.grade_id
		WHERE id_lib_brw=#{idLibBrw} AND id_member_brw=#{idMemberBrw}
			AND (end_date_brw is NULL  OR end_date_brw = '' OR end_date_brw > curdate())
		ORDER BY start_date_brw ASC
	</select>
	
	<!-- ReturnBookOk.java - 책반납 업데이트 -->
	<update id="updateBorrowEndDate" parameterType="com.gaimit.mlm.model.Borrow">
		UPDATE borrow r
		INNER JOIN book_held h on r.book_held_id = h.id
		SET end_date_brw=now()
		WHERE id_lib_brw=#{idLibBrw} AND local_id_barcode=#{localIdBarcode} AND id_brw=#{idBrw}
	</update>
	
	<!-- ReturnCancelBookOk.java - 책반납 업데이트 -->
	<update id="updateCancelBorrowEndDate" parameterType="com.gaimit.mlm.model.Borrow">
		UPDATE borrow r
		INNER JOIN book_held h on r.book_held_id = h.id
		SET end_date_brw = NULL
		WHERE id_lib_brw=#{idLibBrw} AND local_id_barcode=#{localIdBarcode} AND id_brw=#{idBrw}
	</update>
	
	<select id="selectBorrowRtnd" parameterType="com.gaimit.mlm.model.Borrow" resultMap="borrow">
		SELECT
			id_brw, id_lib_brw, id_book_brw, b.id_code_book as id_code_book, b.name_book as name_book,
			id_member_brw, m.name as name, m.phone, start_date_brw, end_date_brw
		FROM borrow r
		INNER JOIN book b on r.id_book_brw = b.id_book
		INNER JOIN member m on r.id_member_brw = m.id
		WHERE id_lib_brw=#{idLibBrw} AND id_code_book=#{idCodeBook} AND id_brw=#{idBrw}
		ORDER BY start_date_brw ASC
	</select>
	
	<!-- BrwBookOk.java, 현재 대출중인지 검사, 카운트>0이면 대출중입니다 리턴 -->
	<select id="selectBorrowCountByBarcodeBook" parameterType="com.gaimit.mlm.model.Borrow" resultType="int">
		SELECT count(id_brw)
		FROM borrow b
		INNER JOIN book_held h ON b.book_held_id = h.id
		WHERE id_lib_brw=#{idLibBrw}
			AND (end_date_brw is NULL OR end_date_brw = '')
			AND local_id_barcode = #{localIdBarcode}
	</select>
	
	<!-- bookHeldListPopup 에도 대출중이 아닌 책 검색 할때 사용
		도서리스트중에도 도서관 내의 책 검색에도 사용될 예정 -->
		<!-- 괄호도 신경써야된다.....!!!!! -->
	<select id="selectRemainedBookOnLibrary" parameterType="com.gaimit.mlm.model.Borrow" resultMap="borrow">
		SELECT
			title_book, writer_book, local_id_barcode, copy_code, publisher_book
		FROM book_held h
		LEFT OUTER JOIN borrow r ON h.id = r.book_held_id
		INNER JOIN book b on b.id_book = h.book_id_book
		WHERE (library_id_lib = #{libraryIdLib}
		AND (book_held_id NOT IN (SELECT book_held_id FROM borrow r WHERE (end_date_brw IS NULL OR end_date_brw = '')))
		OR (library_id_lib = #{libraryIdLib} AND id_brw IS NULL))
		<choose>
			<when test="titleBook != null">
				AND title_book LIKE concat('%', #{titleBook}, '%')
			</when>
			<when test="writerBook != null">
				AND writer_book LIKE concat('%', #{writerBook}, '%')
			</when>
			<when test="publisherBook != null">
				AND publisher_book LIKE concat('%', #{publisherBook}, '%')
			</when>
		</choose>
		GROUP BY id
	</select>
	
	<!-- BrwBook.java  
		memberId를 이용하여, 멤버가 현재 대여중인 도서 권수 확인 -->
	<select id="selectBrwBookCountByMemberId" parameterType="com.gaimit.mlm.model.Borrow" resultType="int">
		SELECT
			COUNT(id_brw)
		FROM borrow r
		INNER JOIN member m ON r.id_member_brw = m.id
		WHERE id_lib_brw = #{idLibBrw} AND (end_date_brw IS NULL OR end_date_brw = '')
		AND id_member_brw = #{idMemberBrw}
	</select>
	
	<!-- BrwBookOk.java에서 사용 
		idMemberBrw 값은 member_grade와 member와는 상관없는 값이지만,
		resultMap에 명시되어있고, brw객체에 .setIdMemberBrw 로 m.id 값을 주어 사용 가능함. -->
	<select id="selectBrwLimitByMemberId" parameterType="com.gaimit.mlm.model.Borrow" resultType="int">
		SELECT
			brw_limit
		FROM member_grade g
		INNER JOIN member m ON g.grade_id = m.grade_id
		<!-- INNER JOIN borrow r ON m.id = r.id_member_brw -->
		WHERE m.id = #{idMemberBrw}
	</select>
	
</mapper>