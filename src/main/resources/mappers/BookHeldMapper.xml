<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BookHeldMapper">
	<resultMap id="bookHeld" type="com.gaimit.mlm.model.BookHeld">
		<!-- beans클래스에서 상속을 받았더라도, 맵퍼에선 명시해줘야한다. -->
		<result property="idBook" column="id_book"/>
		<result property="titleBook" column="title_book"/>
		<result property="writerBook" column="writer_book"/>
		<result property="categoryBook" column="category_book"/>
		<result property="publisherBook" column="publisher_book"/>
		<result property="pubDateBook" column="pub_date_book"/>
		<result property="priceBook" column="price_book"/>
		<result property="isbn10Book" column="isbn10_book"/>
		<result property="isbn13Book" column="isbn13_book"/>
		<result property="descriptionBook" column="description_book"/>
		<result property="bookOrNot" column="book_or_not"/>
		<result property="page" column="page"/>
		<result property="imageLink" column="image_link"/>
		<result property="classificationCode" column="classification_code"/>
		<result property="authorCode" column="author_code"/>
		<result property="volumeCode" column="volume_code"/>
		
		<!-- 이하 bookHeld 칼럼 -->
		<result property="id" column="id"/>
		<result property="libraryIdLib" column="library_id_lib"/>
		<result property="bookIdBook" column="book_id_book"/>
		<result property="bookShelf" column="book_shelf"/>
		<result property="regDate" column="reg_date"/>
		<result property="localIdBarcode" column="local_id_barcode"/>
		<result property="purchasedOrDonated" column="purchased_or_donated"/>
		<result property="available" column="available"/>
		<result property="additionalCode" column="additional_code"/>
		<result property="copyCode" column="copy_code"/>
		
	</resultMap>
	
	<!-- 아이디 중복검사를 수행한다 -->
	<!-- <select id="selectUserIdCount" parameterType="com.gaimit.mlm.model.Member" resultType="int">
		SELECT count(id) FROM member WHERE user_id=#{userId}
	</select> -->
	
	<!-- 이메일 중복 검사를 수행한다 -->
	<!-- <select id="selectEmailCount" parameterType="com.gaimit.mlm.model.Member" resultType="int">
		SELECT count(id) FROM member WHERE email=#{email}
	</select> -->


	<!-- 도서 목록 조회 -->
	<!-- serviceImpl에서 getBookHeldList -->
	<select id="selectBookHeldList" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id, title_book, writer_book, classification_code, book_shelf, reg_date,
			local_id_barcode, purchased_or_donated, available, additional_code, copy_code,
			library_id_lib
		FROM book_held h
		INNER JOIN book b
		ON h.book_id_book = b.id_book
		WHERE library_id_lib=#{libraryIdLib}
		<if test="titleBook != null">
			AND b.title_book LIKE concat('%', #{titleBook}, '%')
		</if>
		ORDER BY id ASC
	</select>
	
	<!-- getBookHelditem -->
	<select id="selectBookHeld" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id, book_shelf, reg_date, local_id_barcode, purchased_or_donated,
			available, additional_code, copy_code
		FROM book_held
		WHERE library_id_lib=#{libraryIdLib} AND local_id_barcode=#{localIdBarcode}
		<!-- WHERE id_lib_book = #{idLibBook} AND id_code_book = #{idCodeBook} -->
	</select>
	
	<!-- <select id="selectBookHeld" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id, book_shelf, reg_date, local_id_barcode, purchased_or_donated,
			available, additional_code, copy_code
		FROM book_held
		WHERE library_id_lib=#{libraryIdLib} AND id=#{id}

	</select> 이거 id로 호출할때가 필요할 것 같은데 확인해서 분리하거나 하기.-->
	
	<!-- 책 공통DB에 등록되어 있는지 확인 -->
	<select id="selectBookCount" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			count(id_book)
		FROM book
		WHERE isbn13_book = #{isbn13Book}
	</select>
	
	<select id="selectBookId" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			id_book
		FROM book
		WHERE isbn13_book = #{isbn13Book}
	</select>
	
	<insert id="insertBook" parameterType="com.gaimit.mlm.model.BookHeld" useGeneratedKeys="true" keyProperty="id_book">
		INSERT INTO book (
			title_book, writer_book, category_book,
			publisher_book, pub_date_book, price_book, isbn10_book, isbn13_book,
			description_book, book_or_not, page, image_link, classification_code,
			author_code, volume_code
		) VALUES (
			#{titleBook}, #{writerBook}, #{categoryBook},
			#{publisherBook}, #{pubDateBook}, #{priceBook}, #{isbn10Book}, #{isbn13Book},
			#{descriptionBook}, #{bookOrNot}, #{page}, #{imageLink}, #{classificationCode},
			#{authorCode}, #{volumeCode} 
		)
	</insert>
	
	<insert id="insertBookHeld" parameterType="com.gaimit.mlm.model.BookHeld" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO book_held (
			library_id_lib, book_id_book, book_shelf, reg_date, local_id_barcode,
			purchased_or_donated, available, additional_code, copy_code  
		) VALUES (
			#{libraryIdLib}, #{bookIdBook}, #{bookShelf}, now(), #{localIdBarcode},
			#{purchasedOrDonated}, #{available}, #{additionalCode}, #{copyCode}
		)
	</insert>
	
	<!-- bookHeld 테이블에 중복되는 도서가 있는지 검사 -->
	<select id="selectBookHeldCount" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			count(id)
		FROM book_held
		WHERE book_id_book = #{bookIdBook} AND library_id_lib = #{libraryIdLib}
	</select>
	
	<!-- bookHeld 도서 첫등록체크 -->
	<select id="selectBookHeldFirstCount" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			count(id)
		FROM book_held
		WHERE library_id_lib = #{libraryIdLib}
	</select>
	
	<!-- 복본이 있는지 검사 -->
	<select id="selectLastCopyCode" parameterType="com.gaimit.mlm.model.BookHeld" resultType="int">
		SELECT
			copy_code
		FROM book_held
		WHERE book_id_book=#{bookIdBook} AND library_id_lib = #{libraryIdLib}
		ORDER BY id DESC
		LIMIT 1;
	</select>
	
	<!-- 바코드 최종번호 불러오기 -->
	<select id="selectLastLocalBarcode" parameterType="com.gaimit.mlm.model.BookHeld" resultMap="bookHeld">
		SELECT
			local_id_barcode
		FROM book_held
		WHERE library_id_lib = #{libraryIdLib}
		ORDER BY id DESC
		LIMIT 1;
	</select>
	
	
	
	
</mapper>